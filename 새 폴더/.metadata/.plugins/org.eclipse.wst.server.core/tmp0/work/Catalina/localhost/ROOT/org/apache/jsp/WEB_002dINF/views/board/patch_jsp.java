/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-08-03 05:54:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class patch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\n");
      out.write("	href=\"../../resources/css/board/boardPatch.css\" />\n");
      out.write("<title>패치노트</title>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"patch_box\">\n");
      out.write("		<div class=\"ph1\">\n");
      out.write("			<h1>패치노트</h1>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"pbox1\">\n");
      out.write("			<button class=\"pbutton1\" id=\"patchb1\">마인크래프트 - 1.20.10(베드락)</button>\n");
      out.write("			<pre class=\"patchpre pshow\">\n");
      out.write("<span>게시일: 2023년 7월 11일</span>\n");
      out.write("새로운 Minecraft 업데이트를 플레이할 준비가 되었습니다! \n");
      out.write("Trails & Tales 업데이트를 출시한 이후 팀은 게임을 더욱 개선하기 위해 열심히 노력했습니다. \n");
      out.write("다음은 주요 내용 중 일부입니다.\n");
      out.write("\n");
      out.write("플레이어는 이제 1.5 블록 간격 아래로 잠입할 수 있습니다.\n");
      out.write("더 이상 보트 제작에 삽이 필요하지 않습니다.\n");
      out.write("더 많은 동작이 Sculk 센서에서 감지한 진동을 방출합니다.\n");
      out.write("커뮤니티에서 보고된 50개 이상의 문제에 대한 수정\n");
      out.write("참고: 이 업데이트는 Xbox에서 버전 1.20.11로 나타납니다.\n");
      out.write("\n");
      out.write("게임에 대한 여러분의 생각은 계속해서 새로운 업데이트를 형성하므로 \n");
      out.write("bugs.mojang.com 에서 새로운 버그를 보고하고 \n");
      out.write("feedback.minecraft.net 에서 피드백을 남겨주세요 .\n");
      out.write("			\n");
      out.write("			<img src=\"/resources/images/patch/patchnotes.png\" alt=\"패치1 이미지\"\n");
      out.write("					class=\"patch-image\">\n");
      out.write("			\n");
      out.write("바닐라 패리티\n");
      out.write("\n");
      out.write("짧은 몰래\n");
      out.write("\n");
      out.write("은신하는 동안 플레이어의 히트박스 높이가 이제 1.5 블록으로 줄어듭니다.\n");
      out.write("1.8 블록 미만의 간격에 갇히면 자동으로 잠입이 시작됩니다.\n");
      out.write("은신은 이러한 변경 사항에 따라 플레이어 카메라 높이를 낮춥니다.\n");
      out.write("은신은 이제 은신을 종료하기 위해 서있을 충분한 공간이 필요합니다.\n");
      out.write("일어서지는 못하지만 잠입할 수 있는 플레이어는 수영에서 잠입으로 전환됩니다.\n");
      out.write("플레이어는 더 이상 탈 때 몰래 들어갈 수 없습니다( MCPE-170613 ) .\n");
      out.write("플레이어는 특정 시나리오에서 짧게 잠입할 때 더 이상 질식하지 않습니다.\n");
      out.write("플레이어는 2 블록 간격에서 낙타를 탈 때 더 이상 질식하지 않습니다( MCPE-166451 )  .\n");
      out.write("플레이어가 블록에 밀려 짧은 은신을 할 때 더 이상 약간 밀리지 않습니다( MCPE-166411 ) .\n");
      out.write("은신 버튼을 누르고 있는 것과 같이 \n");
      out.write("은신하도록 강제되는 많은 상호 작용을 수정했습니다( MCPE-170610 ) .\n");
      out.write("\n");
      out.write("기타 변경 사항\n");
      out.write("저장 개체가 떨어뜨린 항목이 이제 가장 가까운 블록 내부 중앙에 위치함( MCPE-160189 )\n");
      out.write("보트 레시피에서 삽이 제거되었습니다.\n");
      out.write("막대기 대신 판자를 사용하도록 배럴 제조법이 수정되었습니다.\n");
      out.write("거미줄을 끈으로 만드는 방법이 제거되었습니다.\n");
      out.write("좀비 주민이 경화 후 주어진 아이템을 떨어뜨리지 않는 버그를 수정했습니다( MCPE-163670 ) .\n");
      out.write("\n");
      out.write("실험적 기능\n");
      out.write("\n");
      out.write("크롤링\n");
      out.write("\n");
      out.write("Short Sneaking and Crawling Experimental 토글 뒤에서 크롤링하는 기능을 추가했습니다.\n");
      out.write("새로운 플레이어 크롤링 애니메이션 생성\n");
      out.write("플레이어는 이제 은신과 유사하게 1 블록 간격에 있을 때 크롤링을 시작합니다.\n");
      out.write("크롤링은 몰래 움직이는 것과 같은 속도입니다.\n");
      out.write("플레이어는 1 블록 간격을 벗어나면 자동으로 일어서거나 잠입을 시작합니다.\n");
      out.write("플레이어는 기어가는 동안 물에 들어가면 수영을 시작하거나 그 반대의 경우도 마찬가지입니다.\n");
      out.write("플레이어의 모델은 이제 수영할 때 히트박스를 중심으로 합니다( MCPE-122663 ).\n");
      out.write("플레이어는 이제 은신, 수영 또는 활공할 때 항상 카메라 위치에서 발사체를 생성합니다.\n");
      out.write("이제 플레이어가 몰래 움직이거나 수영하거나 활공하는 경우 올바른 위치에서 \n");
      out.write("식사를 할 때 입자 효과를 생성합니다.\n");
      out.write("로열티 삼지창은 항상 플레이어의 카메라로 돌아갑니다.\n");
      out.write("다락문으로 내부를 기어갈 때 플레이어가\n");
      out.write("더 이상 가마솥이나 퇴비통 안에 갇히지 않음( MCPE-170836 ).\n");
      out.write("크롤링 시 종이 인형이 이제 제대로 표시됩니다.\n");
      out.write("글라이딩 또는 수영이 때때로 플레이어에게 잘못된 경계 상자를\n");
      out.write(" 제공할 수 있는 문제를 수정했습니다( MCPE-170882 ) .\n");
      out.write("레시피 잠금 해제\n");
      out.write("\n");
      out.write("레시피 잠금 해제 – 이제 Bedrock에서!\n");
      out.write("실험으로 레시피 잠금 해제 추가\n");
      out.write("재료를 수집하여 관련 레시피 잠금 해제\n");
      out.write("새로운 제작 재료를 발견하면 알림이 표시됩니다.\n");
      out.write("아이템을 집으면 해당 아이템을 만드는 방법을 배울 수 있습니다. \n");
      out.write("친구가 이전에 만든 적이 없는 도구를 줄 때 좋습니다.\n");
      out.write("이 기능에 대한 귀하의 의견을 듣고 싶습니다. \n");
      out.write("aka.ms/MCRecipeUnlocks 에서 피드백을 보내주세요.	\n");
      out.write("			</pre>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"pbox1\" >\n");
      out.write("			<button class=\"pbutton1\" id=\"patchb2\">마인크래프트: 자바 에디션 - 1.20(Trails &\n");
      out.write("				Tales)</button>\n");
      out.write("			<pre class=\"patchpre phide1\">\n");
      out.write("<span>게시일: 2023년 6월 8일</span>\n");
      out.write("뭐야, 오늘 특별한 일이 있니? 잠깐만, 끌로 깎은 책장에서 달력 책을 꺼내겠습니다.\n");
      out.write("\n");
      out.write("오, Trails & Tales를 위한 시간입니다! 내가 어떻게 잊을 수 있지? \n");
      out.write("새 브러시를 장착하고 낙타를 타고 새로운 모험을 떠날 시간입니다!\n");
      out.write("\n");
      out.write("<img src=\"/resources/images/patch/1665.jpg\" alt=\"패치2 이미지\"\n");
      out.write("					class=\"patch-image\">\n");
      out.write("	\n");
      out.write("새로운 기능\n");
      out.write("\"업데이트 1.20\" 실험 팩의 모든 기능과 변경 사항이 이제 게임에 포함됩니다.\n");
      out.write("추가된 고고학\n");
      out.write("Sniffer mob, Torchflowers 및 Pitcher Plants 추가\n");
      out.write("낙타 몹 추가\n");
      out.write("Smithing Template 항목을 추가하고 Smithing Table을 재설계했습니다.\n");
      out.write("갑옷을 시각적으로 커스터마이즈할 수 있는 새로운 갑옷 트리밍 시스템 추가\n");
      out.write("네더라이트 장비 제작 방식 변경\n");
      out.write("Cherry Grove biome 및 Cherry Wood 세트 추가\n");
      out.write("대나무 나무 세트 추가\n");
      out.write("깎인 책장 블록 추가\n");
      out.write("매달린 표지판 추가\n");
      out.write("Signs에 대한 향상된 사용자 정의 옵션\n");
      out.write("보정된 스컬크 센서 블록 추가\n");
      out.write("Blocks of Amethyst에 진동 공명 기능이 추가되었습니다.\n");
      out.write("노트 블록에 몹 헤드가 있는 재생 가능한 몹 사운드 추가\n");
      out.write("피글린 몹 헤드 추가\n");
      out.write("고고학\n");
      out.write("제작 가능한 브러시 아이템 추가\n");
      out.write("수상한 모래와 수상한 자갈 추가\n");
      out.write("수상한 모래는 사막 사원, 사막 우물, 따뜻한 바다 폐허에서 찾을 수 있습니다.\n");
      out.write("의심스러운 자갈은 차가운 바다 폐허와 트레일 폐허에서 찾을 수 있습니다.\n");
      out.write("이 깨지기 쉬운 블록은 발견하기 어렵고 파괴하기 쉬우므로 조심하세요!\n");
      out.write("수상한 모래 또는 수상한 자갈을 브러시로 닦으면 오래 전에 묻힌 물체가 추출됩니다.\n");
      out.write("잃어버린 문화에서 묻힌 구조인 Trail Ruins를 추가했습니다.\n");
      out.write("네 가지 유형의 방어구 트림 템플릿을 여기에서 찾을 수 있습니다.\n");
      out.write("Trail Ruins는 Taigas, Snowy Taigas, \n");
      out.write("\n");
      out.write("모든 Old Growth forest biomes 및 Jungles에서 찾을 수 있습니다.\n");
      out.write("이 구조에서 의심스러운 블록을 닦으면 새로운 음악 디스크를 찾을 수 있습니다.\n");
      out.write("주크박스에 넣으면 Aaron Cherof의 \"Relic\"이 재생됩니다.\n");
      out.write("도자기 조각 추가\n");
      out.write("도자기 조각에는 사진이 있습니다.\n");
      out.write("사막 우물, 사막 사원, 차가운 바다 유적, 따뜻한 바다 유적, \n");
      out.write("트레일 유적의 5개 고고학 유적지에 총 20개의 조각이 배포되었습니다.\n");
      out.write("제작할 수 없으며 수상한 모래 또는 수상한 자갈을 솔질해야만 찾을 수 있습니다.\n");
      out.write("장식된 냄비\n");
      out.write("4개의 도기 조각을 함께 만들면 양쪽에 그림이 있는 장식된 냄비가 만들어집니다.\n");
      out.write("Decorated Pot 레시피에서 도자기 파편 대신 벽돌 아이템을 사용할 수 있습니다.\n");
      out.write("\n");
      out.write("Sniffer는 Minecraft Live 2022의 마피아 투표 우승자입니다.\n");
      out.write("스니퍼는 수동적이고 우호적인 몹입니다.\n");
      out.write("스니퍼는 공기를 킁킁대고 가끔 씨앗을 파서 횃불 씨앗 또는 물병 꼬투리 아이템을 생성합니다.\n");
      out.write("스니퍼는 풀과 흙 같은 블록만 파낼 수 있습니다.\n");
      out.write("Sniffers는 Torchflowers Seeds에 의해 유혹되고 자랄 수 있습니다.\n");
      out.write("스니퍼 에그\n");
      out.write("따뜻한 바다 유적의 수상한 모래를 닦으면 찾을 수 있습니다.\n");
      out.write("두 마리의 Sniffer가 번식할 때 즉시 Snifflet을 생성하지 않습니다. \n");
      out.write("대신 Sniffer Egg가 떨어집니다.\n");
      out.write("스니퍼 에그는 세상에 배치되면 일정 시간이 지나면 부화합니다.\n");
      out.write("이끼에 알을 놓으면 약 10분 안에 알이 부화합니다.\n");
      out.write("다른 모든 블록에서는 약 20분 안에 부화합니다.\n");
      out.write("\n");
      out.write("낙타\n");
      out.write("낙타는 안장을 장착하고 두 명의 플레이어가 탈 수 있습니다.\n");
      out.write("낙타는 사막 마을이 생성될 때 자연적으로 생성됩니다.\n");
      out.write("낙타는 선인장을 들고 유혹할 수 있습니다.\n");
      out.write("선인장을 낙타에게 먹이고 번식시키세요.\n");
      out.write("낙타는 키가 크다\n");
      out.write("대부분의 적대적인 몹은 당신이 낙타에 있을 때 접근할 수 없습니다.\n");
      out.write("그들은 울타리와 벽을 걸을 수 있습니다\n");
      out.write("낙타는 무작위로 앉아\n");
      out.write("앉아있는 동안 움직이도록 설득하기가 어렵습니다.\n");
      out.write("낙타는 천천히 걷거나 빠르게 질주할 수 있습니다.\n");
      out.write("그들은 또한 앞으로 돌진할 수 있지만 그렇게 할 때 잠시 동안 체력을 잃습니다.\n");
      out.write("			</pre>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"pbox1 lastpbox\">\n");
      out.write("			<button class=\"pbutton1\" id=\"patchb3\">마인크래프트 - Trails & Tales -\n");
      out.write("				1.20.0(베드락)</button>\n");
      out.write("			<pre class=\"patchpre phide1\">\n");
      out.write("<span>게시일: 2023년 6월 7일</span>\n");
      out.write("Trails & Tales 업데이트는 여러분의 이야기에 생명을 불어넣습니다! \n");
      out.write("동료와 함께 낙타를 타고 고고학 유적지나 벚나무 숲을 찾아보세요. \n");
      out.write("스니퍼 알을 부화시켜 멸종 위기에서 되살리세요. \n");
      out.write("재생 가능한 몹 소리를 만들고, 대나무로 공예하고, 갑옷을 다듬고, 표지판을 걸어보세요. \n");
      out.write("모든 이야기가 중요하기 때문에 깎인 책장에 책을 쓰고 보관하십시오!\n");
      out.write("f\n");
      out.write("게임을 플레이하고 개발 중에 피드백을 보내주신 모든 분들께 진심으로 감사드립니다! \n");
      out.write("업데이트에 대한 귀하의 생각은 계속해서 중요하므로 \n");
      out.write("bugs.mojang.com 에서 새로운 버그를 보고 하고 \n");
      out.write("aka.ms/TrailsTalesFeedback 에서 피드백을 남겨주세요 .\n");
      out.write("\n");
      out.write("업데이트에 뛰어들자!\n");
      out.write("			\n");
      out.write("			<img src=\"/resources/images/patch/Trails.png\" alt=\"패치3 이미지\"\n");
      out.write("					class=\"patch-image\">\n");
      out.write("			\n");
      out.write("새로운 기능\n");
      out.write("\n");
      out.write("고고학\n");
      out.write("\n");
      out.write("제작 가능한 브러시 아이템 추가\n");
      out.write("수상한 모래와 수상한 자갈 추가\n");
      out.write("수상한 모래는 사막 사원, 사막 우물, 따뜻한 바다 폐허에서 찾을 수 있습니다.\n");
      out.write("의심스러운 자갈은 차가운 바다 폐허와 트레일 폐허에서 찾을 수 있습니다.\n");
      out.write("이 깨지기 쉬운 블록은 발견하기 어렵고 파괴하기 쉬우므로 조심하세요!\n");
      out.write("수상한 모래 또는 수상한 자갈을 브러시로 닦으면 오래 전에 묻힌 물체가 추출됩니다.\n");
      out.write("잃어버린 문화에서 묻힌 구조인 Trail Ruins를 추가했습니다.\n");
      out.write("네 가지 유형의 방어구 트림 템플릿을 여기에서 찾을 수 있습니다.\n");
      out.write("Trail Ruins는 Taigas, Snowy Taigas, \n");
      out.write("모든 Old Growth forest biomes 및 Jungles에서 찾을 수 있습니다.\n");
      out.write("이 구조에서 의심스러운 블록을 닦으면 새로운 음악 디스크를 찾을 수 있습니다.\n");
      out.write("주크박스에 넣으면 Aaron Cherof의 \"Relic\"이 재생됩니다.\n");
      out.write("도자기 조각 추가\n");
      out.write("도자기 조각에는 사진이 있습니다.\n");
      out.write("사막 우물, 사막 사원, 차가운 바다 유적, 따뜻한 바다 유적, \n");
      out.write("트레일 유적의 5개 고고학 유적지에 총 20개의 조각이 배포되었습니다.\n");
      out.write("제작할 수 없으며 수상한 모래 또는 수상한 자갈을 솔질해야만 찾을 수 있습니다.\n");
      out.write("장식된 화분\n");
      out.write("\n");
      out.write("4개의 도기 조각을 함께 만들면 양쪽에 그림이 있는 장식된 냄비가 만들어집니다.\n");
      out.write("Decorated Pot 레시피에서 도자기 파편 대신 벽돌 아이템을 사용할 수 있습니다.\n");
      out.write("브릭 아이템으로 만들어진 측면에는 그림이 없습니다.\n");
      out.write("블록 파괴 도구로 장식된 냄비를 부수고 깨뜨리면 도자기 조각을 되찾을 수 있습니다.\n");
      out.write("맨손, 실크 터치 도구 또는 기타 항목으로 냄비를 치면 손상되지 않은 냄비가 대신 떨어집니다.\n");
      out.write("패턴이 하나 이상 있는 제작된 장식 냄비에는 \n");
      out.write("조각 및 벽돌 재료를 표시하는 마우스 오버 툴팁이 있습니다.\n");
      out.write("체리 그로브스\n");
      out.write("\n");
      out.write("예쁜 벚꽃나무가 있는 새로운 Cherry Grove 바이옴을 추가했습니다.\n");
      out.write("바이옴은 메도우와 비슷한 장소인 산에서 찾을 수 있습니다.\n");
      out.write("새로운 벚나무 세트를 추가했습니다. \n");
      out.write("해당 세트에서 제작할 수 있는 모든 해당 나무 물건이 포함되어 있습니다.\n");
      out.write("분홍색 입자가 벚꽃 잎 아래에서 떨어집니다.\n");
      out.write("바닥에 많은 분홍색 꽃이 있는 새로운 분홍색 꽃잎 블록을 추가했습니다.\n");
      out.write("각 분홍색 꽃잎 블록은 최대 4개의 꽃잎을 포함할 수 있습니다.\n");
      out.write("뼛가루를 사용하면 꽃잎의 수가 증가한다.\n");
      out.write("이미 배치된 블록에 분홍색 꽃잎을 배치하면 꽃잎 수가 증가합니다.\n");
      out.write("채광할 때 블록의 꽃잎 수를 떨어뜨립니다.\n");
      out.write("Cherry Grove biome 옵션으로 씨앗 선택기를 업데이트했습니다.\n");
      out.write("대나무 나무 세트\n");
      out.write("\n");
      out.write("새로운 대나무 세트를 추가했습니다. \n");
      out.write("해당 세트에서 제작할 수 있는 모든 해당 목재가 포함되어 있습니다.\n");
      out.write("대나무 블록은 9개의 대나무로 만들 수 있으며 다른 통나무처럼 벗겨낼 수 있습니다.\n");
      out.write("대나무 블록으로 만든 대나무 널빤지는 나무 통나무의 경우 4개에 비해 2개의 널빤지만 생성합니다.\n");
      out.write("Bamboo Mosaic이라는 Bamboo 고유의 새로운 \"Mosaic\" 판자 변종을 추가했습니다.\n");
      out.write("수직 스트립의 1x2 대나무 석판으로 제작할 수 있습니다.\n");
      out.write("Bamboo Mosaic의 Stair 및 Slab 변형을 제작할 수 있습니다.\n");
      out.write("대나무 모자이크 블록은 다른 나무 블록을 사용하는 경우 제작 재료로 사용할 수 없지만\n");
      out.write(" 연료로 사용할 수 있습니다.\n");
      out.write("일반 보트처럼 제작할 수 있지만 대나무 판자로 만들 수 있는 \n");
      out.write("고유한 대나무 뗏목 및 대나무 체스트 뗏목을 추가했습니다.\n");
      out.write("일반 보트와 기능은 같지만 독특한 모양을 가지고 있습니다.			\n");
      out.write("			</pre>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("	<!-- 상단으로 이동하는 버튼 -->\n");
      out.write("	<div class=\"scroll-to-top-btn\" onclick=\"scrollToTop()\">\n");
      out.write("		<span>&#8593;</span>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<script type=\"text/javascript\"\n");
      out.write("		src=\"../../resources/js/board/boardPatch.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
